plot(Auto.Ladung,type="n",xlim=c(-1,1),ylim=c(-1,1),xlab="1. Faktor",
ylab="2. Faktor")
null<-rep(0,7)
arrows(null,null,Auto.Ladung[,1],Auto.Ladung[,2])
abline(h=0)
abline(v=0)
plot(Auto.Dreh.Ladung,type="n",xlim=c(-1,1),ylim=c(-1,1),xlab="1.
Faktor", ylab="2. Faktor")
arrows(null,null,Auto.Dreh.Ladung[,1],Auto.Dreh.Ladung[,2])
abline(h=0)
abline(v=0)
factanal(Auto.frame,factors=2)
plot(Auto.Lade.ML, type="n", xlim=c(-1,1), ylim=c(-1,1), xlab="1.
Faktor", ylab="2. Faktor")
v1 <- c(1,1,1,1,1,1,1,1,1,1,3,3,3,3,3,4,5,6)
v2 <- c(1,2,1,1,1,1,2,1,2,1,3,4,3,3,3,4,6,5)
v3 <- c(3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,5,4,6)
v4 <- c(3,3,4,3,3,1,1,2,1,1,1,1,2,1,1,5,6,4)
v5 <- c(1,1,1,1,1,3,3,3,3,3,1,1,1,1,1,6,4,5)
v6 <- c(1,1,1,2,1,3,3,3,4,3,1,1,1,2,1,6,5,4)
m1 <- cbind(v1,v2,v3,v4,v5,v6)
?factanal
cor(m1)
factanal(m1, factors = 3) # varimax is the default
factanal(m1, factors = 3, rotation = "promax")
prcomp(m1)
## formula interface
factanal(~v1+v2+v3+v4+v5+v6, factors = 3,
scores = "Bartlett")$scores
## a realistic example from Bartholomew (1987, pp. 61-65)
utils::example(ability.cov)
plot(Auto.Lade.ML, type="n", xlim=c(-1,1), ylim=c(-1,1), xlab="1.
Faktor", ylab="2. Faktor")
arrows(null, null, Auto.Lade.ML[,1], Auto.Lade.ML[,2])
abline(h=0)
abline(v=0)
hclust (dist , method = " compact ")
hc <- hclust(dist(USArrests), "ave")
plot(hc)
WiWi    <- c(37097 ,45617, 41115 ,32510, 35940, 38247, 33352 ,42367 ,29564 ,34896)
Sozi    <- c(46109, 28399, 42363 ,32928, 36893, 41527, 41074 ,27341, 36904 ,36247)
Math    <- c(41527, 36891 ,35220, 43529, 34941, 41565 ,52383 ,36348, 37014 ,37897)
Studis <- c(WiWi, Sozi ,Math)
Index <- as.factor(rep(1:3,c(10,10,10)))
levels(Index) <- c("WiWi", "Sozi", "Math")
Data <- data.frame(gruppe=factor(Index),Studis)
summary(aov(Studis ~ Index, data=Data))
plot(aov(Studis~Index))
plo_aov <- plot(aov(Studis~Index))
plo_aov <- plot(aov(Studis~Index),1)
plo_aov
plot(aov(Studis~Index),1)
dev.off
dev.off()
plot(aov(Studis~Index),1)
plot(aov(Studis~Index),2)
plot(aov(Studis~Index),3)
plot(aov(Studis~Index),4)
plot(aov(Studis~Index),5)
plot(aov(Studis~Index),6)
plot(aov(Studis~Index),7)
data ( orings )
plot ( damage /6 ~ temp , orings , xlim =c(0 ,100) , ylim =c(0 ,1) ,
library(faraway)
library(faraway)
install.packages("faraway")
library(faraway)
data ( orings )
plot ( damage /6 ~ temp , orings , xlim =c(0 ,100) , ylim =c(0 ,1) ,
xlab =" Temperatur ", ylab =" Unfall ")
lmod <- lm( damage /6 ~ temp , orings )
abline (lmod , col =4); abline (h =0); abline (h=1)
library ( solaR )
install.packages("solaR")
library ( solaR )
splom ( gala [,c(1 ,2 ,3 ,4)])
x <-seq (0,1, by =.001)
plot ( binomial ()$ linkfun (x),x, xlab =" Logit (p)"
,ylab ="p",type ="l")
plot ( binomial ( link =" probit ")$ linkfun (x),x, xlab =" Probit (p)"
,ylab ="p",type ="l")
abline (h=c(0 ,1))
plot ( binomial ( link =" probit ")$ linkfun (x),x, xlab ="Probit(p)"
,ylab ="p",type ="l")
plot(binomial ( link ="probit")$ linkfun (x),x, xlab ="Probit(p)"
,ylab ="p",type ="l")
abline (h=c(0 ,1))
abline (h=0.5 , col=" blue ")
abline (v=0, col=" blue ")
summary (glm(am ~ PS + wt , data =mtcars , family = binomial ) )
mtcars
summary (glm(am ~ hp + wt , data =mtcars , family = binomial ) )
library ( MASS )
example ( birthwt )
head (bwt)
data(nes96)
head(nes96 [,c(1:7)])
data ( nes96 )
sPID <- nes96 $PID
summary ( sPID )
levels ( sPID ) <- c(" Democrat "," Democrat "," Independent ",
" Independent ", " Independent "," Republican "," Republican ")
summary ( sPID )
inca <- c (1.5 ,4 ,6 ,8 ,9.5 ,10.5 ,11.5 ,12.5 ,13.5 ,14.5 ,16 ,18.5 ,
21 ,23.5 ,27.5 ,32.5 ,37.5 ,42.5 ,47.5 ,55 ,67.5 ,82.5 ,97.5 ,115)
nincome <- inca [ unclass ( nes96 $ income )]
summary ( nincome )
barplot ( table ( nes96 $ educ ),col=" chocolate1 ")
matplot ( prop . table ( table ( nes96 $educ , sPID ),1), type ="l",
matplot(prop.table(table(nes96$educ,sPID),1), type ="l",
xlab =" Education",ylab ="Proportion",lty=c(1 ,2 ,5))
mmodi <- step ( mmod )
mmod <- multinom ( sPID ~ age + educ + nincome , nes96 )
mmod <- multinom(sPID~age + educ + nincome , nes96 )
library ( nnet )
mmod <- multinom(sPID~age + educ + nincome , nes96 )
mmodi <- step ( mmod )
predict (mmodi , data . frame ( nincome =il), type =" probs ")
predict(mmodi,data.frame(nincome =il), type ="probs")
nincome=il
schulen <- read.csv2("http://schulen.bildung-rp.de/fileadmin/zykLus/schuldaten_export.csv")
schulen
head(schulen)
link<- "http://www.statistik.at/web_de/static/mz_2013_sds_-_datensatz_080469.sav"
MZ13 <- read.spss(file=link,
to.data.frame=TRUE,
use.value.labels=FALSE)
library(foreign)
link<- "http://www.statistik.at/web_de/static/mz_2013_sds_-_datensatz_080469.sav"
MZ13 <- read.spss(file=link,
to.data.frame=TRUE,
use.value.labels=FALSE)
MZ13
head(MZ13)
attr(MZ13)
attributes(MZ13)
ab <- attributes(MZ13)
ab$variable.labels
link<- "http://www.statistik.at/web_de/static/mz_2013_sds_-_datensatz_080469.sav"
MZ13 <- read.spss(file=link,
to.data.frame=TRUE,
use.value.labels=T)
attribute(MZ13)
attributes(MZ13)
ab <- attributes(MZ13)
head(ab)
link<- "http://www.statistik.at/web_de/static/mz_2013_sds_-_datensatz_080469.sav"
levels(ab)
levels(MZ13[,2])
labels(MZ13[,2])
MZ13[,2]
labels(MZ13[,2])
labels(MZ13[,1])
labels(MZ13[,4])
labels(MZ13[,5])
?polr
pomodi <- step ( pomod )
pomod <- polr ( sPID ~ age + educ + nincome , nes96 )
pomodi <- step ( pomod )
data(orings)
splom(gala [,c(1 ,2 ,3 ,4)])
library(faraway)
data(orings)
plot ( damage /6 ~ temp , orings , xlim =c(0 ,100) , ylim =c(0 ,1) ,
xlab =" temperature", ylab ="accident")
lmod <- lm( damage /6 ~ temp , orings )
abline (lmod , col =4); abline (h =0); abline (h=1)
plot ( damage /6 ~ temp , orings , xlim =c(0 ,100) , ylim =c(0 ,1) ,
xlab =" temperature", ylab ="accident")
abline (lmod , col =4); abline (h =0); abline (h=1)
data ( gala )
gala <-gala [,-2]
gala $ Species <- round ( sqrt ( gala $ Species ))
head ( gala )
library ( solaR )
splom(gala [,c(1 ,2 ,3 ,4)])
x <-seq (0,1, by =.001)
plot ( binomial ()$ linkfun (x),x, xlab =" Logit (p)"
,ylab ="p",type ="l")
plot(binomial ( link ="probit")$ linkfun (x),x, xlab ="Probit(p)"
,ylab ="p",type ="l")
abline (h=c(0 ,1))
abline (h=0.5 , col=" blue ")
abline (v=0, col=" blue ")
summary (glm(am ~ hp + wt , data =mtcars , family = binomial ) )
library ( MASS )
example ( birthwt )
head (bwt)
summary (bwt)
library ( nnet )
multinom ( formula = low ~ ., data = bwt)
data(nes96)
head(nes96 [,c(1:7)])
data ( nes96 )
sPID <- nes96 $PID
summary ( sPID )
levels ( sPID ) <- c(" Democrat "," Democrat "," Independent ",
" Independent ", " Independent "," Republican "," Republican ")
summary ( sPID )
inca <- c (1.5 ,4 ,6 ,8 ,9.5 ,10.5 ,11.5 ,12.5 ,13.5 ,14.5 ,16 ,18.5 ,
21 ,23.5 ,27.5 ,32.5 ,37.5 ,42.5 ,47.5 ,55 ,67.5 ,82.5 ,97.5 ,115)
nincome <- inca [ unclass ( nes96 $ income )]
summary ( nincome )
barplot ( table ( nes96 $ educ ),col=" chocolate1 ")
matplot(prop.table(table(nes96$educ,sPID),1), type ="l",
xlab =" Education",ylab ="Proportion",lty=c(1 ,2 ,5))
library ( nnet )
mmod <- multinom(sPID~age + educ + nincome , nes96 )
mmodi <- step ( mmod )
library ( MASS )
pomod <- polr ( sPID ~ age + educ + nincome , nes96 )
c( deviance ( pomod ), pomod $edf)
pomodi <- step ( pomod )
data(orings)
library(faraway)
data(orings)
plot ( damage /6 ~ temp , orings , xlim =c(0 ,100) , ylim =c(0 ,1) ,
xlab =" temperature", ylab ="accident")
lmod <- lm( damage /6 ~ temp , orings )
abline (lmod , col =4); abline (h =0); abline (h=1)
plot ( damage /6 ~ temp , orings , xlim =c(0 ,100) , ylim =c(0 ,1) ,
xlab =" temperature", ylab ="accident")
abline (lmod , col =4); abline (h =0); abline (h=1)
library(faraway)
data(orings)
plot ( damage /6 ~ temp , orings , xlim =c(0 ,100) , ylim =c(0 ,1) ,
xlab =" temperature", ylab ="accident")
lmod <- lm( damage /6 ~ temp , orings )
abline (lmod , col =4); abline (h =0); abline (h=1)
lmod <- lm( damage /6 ~ temp , orings )
data(nes96)
?nes96
library(faraway)
data(nes96)
head(nes96 [,c(1:7)])
rm(nes96)
data(nes96)
date()
doc4=  xmlParse("http://www.r-project.org/mail.html",isHTML=TRUE)
library(XML)
doc4=  xmlParse("http://www.r-project.org/mail.html",isHTML=TRUE)
ab <- readHTMLList(link)
link <- "https://de.wikipedia.org/wiki/Landkreis_Ahrweiler"
ab <- readHTMLList(link)
ab
ab <- xmlParse(link)
zz<-url(link,'r',blocking=F)
a<-readLines(zz)
close(zz)
a
length(a)
info <- agrep("Kottenborn",a)
info
info612 <- a[[612]]
info612
path <- "J:/Work/Statistik/Kolb/Beratung/Stichprobendesign/EnAhrgie"
rm(list=ls())
gc()
path <- "J:/Work/Statistik/Kolb/Beratung/Stichprobendesign/EnAhrgie"
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
library(magrittr)
mapStates = map("state", fill = TRUE, plot = FALSE)
leaflet(data = mapStates) %>% addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
colorRamps
install.packages("colorRamps")
geocode("Mannheim")
library(ggmap)
geocode("Mannheim")
install.packages("maptools")
library(ggmap)
coords <- geocode("GESIS Mannheim")
library(geosmdata2)
coords <- geocode_osm("GESIS Mannheim")
coords
library(magrittr)
library(leaflet)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=coords$lon, lat=coords$lat, popup="GESIS Mannheim")
coords$lat
coords
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=coords[2], lat=coords[1], popup="GESIS Mannheim")
m  # Print the map
geocode("Mannheim Wasserturm")
geocode("Mannheim")
library(tmap)
data(Europe)
qtm(Europe)
head(Europe)
datatable(Europe)
library(DT)
datatable(Europe)
Europe
Europe@data
datatable(Europe@data)
kable(Europe@data[1:8,1:5])
qtm(Europe, fill="gdp_cap_est")
qtm(Europe, fill="gdp_cap_est", text="iso_a3")
geocode("Mannheim")
geocode("Mannheim",source="google")
?geocode
date()
library(ggmap)
geocode
?geocode
geocode("Mannheim Wasserturm",source="google")
qmap(location = 'Mannheim', zoom = 14,
maptype="toner",source="stamen") + geom_point(aes(x = lon, y = lat),
data = ListPOI)
ListPOI <-rbind(POI1,POI2,POI3)
POI1 <- geocode("B2, 1 Mannheim",source="google")
POI1
POI2 <- geocode("Hbf Mannheim",source="google")
POI2
POI3 <- geocode("Wasserturm Mannheim",source="google")
ListPOI <-rbind(POI1,POI2,POI3)
ListPOI
qmap(location = 'Mannheim', zoom = 14,
maptype="toner",source="stamen") + geom_point(aes(x = lon, y = lat),
data = ListPOI)
MA_map <- qmap(location = 'Mannheim', zoom = 14,
maptype="toner",source="stamen")
MA_map +
geom_point(aes(x = lon, y = lat),
data = ListPOI)
dev.off()
MA_map +
geom_point(aes(x = lon, y = lat),
data = ListPOI)
MA_map +
geom_point(aes(x = lon, y = lat),col="red",
data = ListPOI)
date()
library(XML)
library(geosmdata2)
library(ggmap)
placeL <- c("Berlin","Hamburg","London")
placeL <- c("Berlin","Hamburg","London")
objL <- c("hostel","bus_stop","museum","attraction")
main.path <- "J:/Work/Statistik/Kolb/Paper/UseOSMdata/"
data.path <- paste(main.path,"data/XML/",sep="")
graph.path <- "J:/Work/Statistik/Kolb/Workshops/2015/Spatial_MA/paper/figure"
placeL <- c("Berlin","Hamburg","London")
objL <- c("hostel","bus_stop","museum","attraction")
i<-1
j <- 3
place <- placeL[j]
xml1 <- get_osm_nodes(obj=objL[i],place)
setwd(data.path)
saveXML(xml1,file=paste(place,"_",objL[i],".xml",sep=""))
i<-2
xml1 <- get_osm_nodes(obj=objL[i],place)
setwd(data.path)
saveXML(xml1,file=paste(place,"_",objL[i],".xml",sep=""))
i<-3
xml1 <- get_osm_nodes(obj=objL[i],place)
setwd(data.path)
saveXML(xml1,file=paste(place,"_",objL[i],".xml",sep=""))
objL <- c("hostel","bus_stop","station","museum",
"attraction","subway_entrance")
j <- 3
xml1 <- get_osm_nodes(obj=objL[i],place)
setwd(data.path)
saveXML(xml1,file=paste(place,"_",objL[i],".xml",sep=""))
DF <- list()
for (i in 1:length(objL)){
xml1 <- xmlParse(paste(place,"_",objL[i],".xml",sep=""))
info <- extract_info_op(xml1,objL[i])
DF[[i]] <- data.frame(website=info$website,
name=info$name,
POI=objL[i],
lat=info$lat,
lon=info$lon)
}
DFa <- do.call(rbind, DF)
library(sp)
library(maptools)
library(xlsx)
data.path <- "D:/Dropbox/RForschung/SpatialMannheim/data"
graph.path <- "C:/Users/kolbjp/Documents/GitHub/GeoData/data/figure"
date()
date()
qmap("Mannheim")
qmap('Mannheim', zoom = 14, source="osm",color="bw")
qmap('Mannheim', zoom = 14, maptype="satellite")
qmap('Mannheim', zoom = 21, maptype="hybrid")
qmap('Mannheim', zoom = 14,
maptype="watercolor",source="stamen")
qmap('Mannheim', zoom = 14,
maptype="toner",source="stamen")
qmap('Mannheim', zoom = 14,
maptype="toner-lite",source="stamen")
qmap('Mannheim', zoom = 14,
maptype="toner-hybrid",source="stamen")
qmap('Mannheim', zoom = 14,
maptype="terrain-lines",source="stamen")
geocode("Mannheim Wasserturm",source="google")
revgeocode(c(48,8))
mapdist("Q1, 4 Mannheim","B2, 1 Mannheim")
mapdist("Q1, 4 Mannheim","B2, 1 Mannheim",mode="walking")
mapdist("Q1, 4 Mannheim","B2, 1 Mannheim",mode="bicycling")
POI1 <- geocode("B2, 1 Mannheim",source="google")
POI2 <- geocode("Hbf Mannheim",source="google")
POI3 <- geocode("Wasserturm Mannheim",source="google")
ListPOI <-rbind(POI1,POI2,POI3)
POI1;POI2;POI3
MA_map +
geom_point(aes(x = lon, y = lat),
data = ListPOI)
MA_map <- qmap('Mannheim',
zoom = 14,
maptype="toner",
source="stamen")
MA_map <- qmap("Mannheim",
zoom = 14,
maptype="toner",
source="stamen")
MA_map
MA_map +
geom_point(aes(x = lon, y = lat),
data = ListPOI)
MA_map +
geom_point(aes(x = lon, y = lat),col="red",
data = ListPOI)
ListPOI$color <- c("A","B","C")
MA_map +
geom_point(aes(x = lon, y = lat,col=color),
data = ListPOI)
ListPOI$size <- c(10,20,30)
MA_map +
geom_point(aes(x = lon, y = lat,col=color,size=size),
data = ListPOI)
from <- "Mannheim Hbf"
from <- "Mannheim Hbf"
to <- "Mannheim B2 , 1"
route_df <- route(from, to, structure = "route")
route_df
qmap("Mannheim Hbf", zoom = 14) +
geom_path(
aes(x = lon, y = lat),  colour = "red", size = 1.5,
data = route_df, lineend = "round"
)
date()
revgeocode(c(48,8))
?revgeocode
revgeocode(c(48,8),output="all")
#--------------------------------#
# Libraries
#--------------------------------#
library(sp)
library(maptools)
library(xlsx)
data.path <- "D:/Dropbox/RForschung/SpatialMannheim/data"
data(wrld_simpl)
setwd(data.path)
murders <- read.xlsx("California Murder Rate 2012.xlsx",1)
# http://www.gadm.org/download
(load("USA_adm2.RData"))
California <- gadm[gadm$NAME_1=="California",]
library(raster)
?getData
gadm <- getData('GADM', country='FRA', level=2)
California <- gadm[gadm$NAME_1=="California",]
gadm$NAME_1
gadm <- getData('GADM', country='USA', level=2)
California <- gadm[gadm$NAME_1=="California",]
ind <- match(murders[,1],California$NAME_2)
California@data$Murders2012 <- murders[ind,2]
California@data$Color.Code <- murders[ind,3]
plot(California,col=California$Color.Code)
California@data$Color.Code
California@data$Murders2012
spplot(California,"Murders2012")
datalink <- "https://github.com/Japhilko/GeoData/blob/master/data/California%20Murder%20Rate%202012.xlsx?raw=true"
murders <- read.xlsx(datalink,1)
datalink <- "https://github.com/Japhilko/GeoData/blob/master/data/California%20Murder%20Rate%202012.xlsx"
murders <- read.xlsx(datalink,1)
datalink <- https://www.fbi.gov/about-us/cjis/ucr/crime-in-the-u.s/2012/crime-in-the-u.s.-2012/tables/8tabledatadecpdf/table-8-state-cuts/table_8_offenses_known_to_law_enforcement_by_california_by_city_2012.xls
datalink <- "https://www.fbi.gov/about-us/cjis/ucr/crime-in-the-u.s/2012/crime-in-the-u.s.-2012/tables/8tabledatadecpdf/table-8-state-cuts/table_8_offenses_known_to_law_enforcement_by_california_by_city_2012.xls"
murders <- read.xlsx(datalink,1)
datalink <- "https://github.com/Japhilko/GeoData/blob/master/data/California%20Murder%20Rate%202012.xlsx"
murders <- read.xlsx(datalink,1)
datalink <- "https://github.com/Japhilko/GeoData/blob/master/data/californiaMurderRate2012.xlsx"
murders <- read.xlsx(datalink,1)
data.path <- "C:/Users/kolbjp/Documents/GitHub/GeoData/data"
setwd(data.path)
save(murders,file="californiaMurderRate2012.RData")
datalink <- "https://github.com/Japhilko/GeoData/blob/master/data/californiaMurderRate2012.RData"
murders <- read.xlsx(datalink,1)
load(datalink)
library(RCurl)
x <- getURL("https://github.com/Japhilko/GeoData/blob/master/data/californiaMurderRate2012.RData")
load(text = x)
murders
write.csv(murders,"californiaMurderRate2012.csv")
x <- getURL("https://github.com/Japhilko/GeoData/blob/master/data/californiaMurderRate2012.csv")
load(text = x)
murders <- read.csv(text = x)
murders
murders <- read.csv(text = x,colsep="\n")
murders <- read.csv(text = x,col.sep="\n")
x <- getURL("https://raw.githubusercontent.com/Japhilko/GeoData/master/data/californiaMurderRate2012.csv")
murders <- read.csv(text = x)
murders
head(murders)
date()
