library("osmar")
data.path <- "J:/Work/Statistik/Kolb/Paper/UseOSMdata/data/XML"
Beeskow <- get_osm(complete_file(), source = osmsource_file("1384849.xml"))
setwd(data.path)
Beeskow <- get_osm(complete_file(), source = osmsource_file("1384849.xml"))
bound_MA <- find(Beeskow, way(tags(k == "boundary")))
bound_MA <- find(Beeskow, way(tags(k == "boundary")))
bg_ids <- find_down(Beeskow, way(bound_MA))
bg <- subset(Beeskow, ids = bg_ids)
bg
bound_MA <- find(Beeskow, relation(tags(k == "boundary")))
bg_ids <- find_down(Beeskow, way(bound_MA))
bg <- subset(Beeskow, ids = bg_ids)
bg
bg_poly <- as_sp(bg, "polygons")
bound <- get_osm(complete_file(), source = osmsource_file("boundMApoly.xml"))
bound_MA <- find(bound, relation(tags(k == "boundary")))
bg_ids <- find_down(bound, way(bound_MA))
bg <- subset(bound, ids = bg_ids)
bg
bound <- get_osm(complete_file(), source = osmsource_file("boundMApoly.xml"))
bound_MA <- find(bound, way(tags(k == "boundary")))
bg_ids <- find_down(bound, way(bound_MA))
bg_ids
bound_MA <- find(Beeskow, relation(tags(k == "name")))
bound_MA
bg_ids <- find_down(Beeskow, way(bound_MA))
bg <- subset(Beeskow, ids = bg_ids)
bg
bg_ids <- find_down(Beeskow, way(bound_MA))
bg_ids
bg <- subset(Beeskow, ids = bg_ids)
bg
library(geosmdata2)
date()
state_choropleth(df_pop_state,
title      = "2012 Population Estimates",
legend     = "Population",
num_colors = 1,
zoom       = c("california", "washington", "oregon"))
library(choroplethr)
state_choropleth(df_pop_state,
title      = "2012 Population Estimates",
legend     = "Population",
num_colors = 1,
zoom       = c("california", "washington", "oregon"))
data(df_pop_state)
state_choropleth(df_pop_state,
title      = "2012 Population Estimates",
legend     = "Population",
num_colors = 1,
zoom       = c("california", "washington", "oregon"))
library(choroplethr)
?df_pop_county
data(df_pop_county)
?county_choropleth
county_choropleth(df_pop_county)
?df_pop_county
county_choropleth(df_pop_county)
country_choropleth(df_pop_country,
title      = "2012 Population Estimates",
legend     = "Population",
num_colors = 1,
zoom       = c("united states of america", "mexico", "canada"))
data(df_pop_county)
country_choropleth(df_pop_country,
title      = "2012 Population Estimates",
legend     = "Population",
num_colors = 1,
zoom       = c("united states of america", "mexico", "canada"))
data(df_pop_country)
country_choropleth(df_pop_country,
title      = "2012 Population Estimates",
legend     = "Population",
num_colors = 1,
zoom       = c("united states of america", "mexico", "canada"))
# create a list of choropleths of presidential election results for each year
choropleths = list()
for (i in 2:ncol(df_president_ts)) {
df           = df_president_ts[, c(1, i)]
colnames(df) = c("region", "value")
title        = paste0("Presidential Election Results: ", colnames(df_president_ts)[i])
choropleths[[i-1]] = state_choropleth(df, title=title)
}
data(df_president_ts)
# create a list of choropleths of presidential election results for each year
choropleths = list()
for (i in 2:ncol(df_president_ts)) {
df           = df_president_ts[, c(1, i)]
colnames(df) = c("region", "value")
title        = paste0("Presidential Election Results: ", colnames(df_president_ts)[i])
choropleths[[i-1]] = state_choropleth(df, title=title)
}
getwd()
library(WDI)
head(WDI)
WDIsearch()
WDIsearch()
date()
info <- WDIsearch()
info
length(info)
info[[1]]
info[[2]]
kable(WDIsearch('gdp')[1:10,])
library(knitr)
kable(WDIsearch('gdp')[1:10,])
dat = WDI(indicator='NY.GDP.PCAP.KD', country=c('MX','CA','US'), start=1960, end=2012)
head(dat)
library(geosmdata2)
place <- "Madrid"
objectL <- "bar"
obj2 <- get_osm_nodes(object,place)
