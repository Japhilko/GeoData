df_schools$name
SPmap +
geom_point(aes(x = lon, y = lat),
data = df_schools)
df_schools$lon <- as.numeric(df_schools$lon)
SPmap +
geom_point(aes(x = lon, y = lat),
data = df_schools)
df_schools$lat <- as.numeric(df_schools$lat)
df_schools$lon <- as.numeric(df_schools$lon)
SPmap +
geom_point(aes(x = lon, y = lat),
data = df_schools)
object_x="amenity=school"
loc1="Speyer"
object_x="amenity=school"
loc1="Speyer"
bv=0.1
bb_SK <- create_bbox(loc1,bv)
xapi_x <- xmlParse(paste("http://open.mapquestapi.com/xapi/api/0.6/node%5B",object_x,
"%5D%5Bbbox=",bb_SK,"%5D",sep=""))
attr(xapi_x,"Info") <- paste(author,scriptname,date())
bv1 <- "f1"
setwd(data.path)
save(xapi_x,file=paste("xapi_HD_",loc1,"_",bv1,"_",object_x1,".RData",sep=""))
xmltop = xmlRoot(xapi_x)
info_school <- xmlSApply(xmltop, xmlAttrs) #name(s)
ncol(info_school)
r <- xmltop
r_length <- xmlSize(r)
sapply(xmlChildren(r[[1]]), xmlName)
sapply(xmlChildren(r[[1]]), xmlName)
school_info <- list()
for (i in 1:r_length){
school_info[[i]] <- xmlSApply(r[[i]], xmlAttrs)
}
df_schools <- data.frame(t(unlist(xmlSApply(r, xmlAttrs) )))
df_schools
df_schools$name <- NA
for (i in 1:nrow(df_schools)){
df_schools$name[i] <- school_info[[i]]["v",which(school_info[[i]]["k",]=="name")]
}
df_schools$lat <- as.numeric(df_schools$lat)
df_schools$lon <- as.numeric(df_schools$lon)
SPmap +
geom_point(aes(x = lon, y = lat),
data = df_schools)
SPmap <- qmap("Speyer",zoom=14)
SPmap <- qmap("Speyer",zoom=10)
SPmap +
geom_point(aes(x = lon, y = lat),
data = df_schools)
bb_SK <- create_bbox(loc1,bv)
bb_SK
df_schools
df_schools
xmlSApply(r, xmlAttrs)
school_info
object_x="amenity=school"
loc1="Speyer"
bv=0.01
bb_SK <- create_bbox(loc1,bv)
xapi_x <- xmlParse(paste("http://open.mapquestapi.com/xapi/api/0.6/node%5B",object_x,
"%5D%5Bbbox=",bb_SK,"%5D",sep=""))
xapi_x
gc_loc_min
object_x="*=school"
loc1="Speyer"
bv=0.01
bb_SK <- create_bbox(loc1,bv)
bv=0.1
bb_SK <- create_bbox(loc1,bv)
xapi_x <- xmlParse(paste("http://open.mapquestapi.com/xapi/api/0.6/node%5B",object_x,
"%5D%5Bbbox=",bb_SK,"%5D",sep=""))
bv=0.05
bb_SK <- create_bbox(loc1,bv)
xapi_x <- xmlParse(paste("http://open.mapquestapi.com/xapi/api/0.6/node%5B",object_x,
"%5D%5Bbbox=",bb_SK,"%5D",sep=""))
bv=0.01
bb_SK <- create_bbox(loc1,bv)
xapi_x <- xmlParse(paste("http://open.mapquestapi.com/xapi/api/0.6/node%5B",object_x,
"%5D%5Bbbox=",bb_SK,"%5D",sep=""))
date()
library(RCurl)
download.file("http://www.informationfreeway.org/api/0.6/node[amenity=hospital]")
?download.file
getwd()
download.file("http://www.informationfreeway.org/api/0.6/node[amenity=hospital]","osm.data")
download.file("http://www.informationfreeway.org/api/0.6/node[amenity=hospital]","osm.data",method="wget")
dir()
info <- xmlParse("http://www.overpass-api.de/api/xapi?way[bbox=9.10,48.70,9.12,48.80][highway=*]")
info
streets_Stg = xmlRoot(info)
streets_Stg
object_x="*=school"
loc1="Speyer"
bv=0.01
bb_SK <- create_bbox(loc1,bv)
bb_SK
info2 <- xmlParse(paste("http://www.overpass-api.de/api/xapi?way[bbox=",bb_SK,"]",object_x,sep=""))
paste("http://www.overpass-api.de/api/xapi?way[bbox=",bb_SK,"]",object_x,sep="")
info2 <- xmlParse(paste("http://www.overpass-api.de/api/xapi?way[bbox=",bb_SK,"][",object_x,"]",sep=""))
info2
object_x="*=school"
loc1="Speyer"
bv=0.1
bb_SK <- create_bbox(loc1,bv)
xapi_x <- xmlParse(paste("http://open.mapquestapi.com/xapi/api/0.6/node%5B",object_x,
info2 <- xmlParse(paste("http://www.overpass-api.de/api/xapi?way[bbox=",bb_SK,"][",object_x,"]",sep=""))
info2 <- xmlParse(paste("http://www.overpass-api.de/api/xapi?way[bbox=",bb_SK,"][",object_x,"]",sep=""))
info2
object_x="amenity=school"
loc1="Speyer"
bv=0.1
bb_SK <- create_bbox(loc1,bv)
info2 <- xmlParse(paste("http://www.overpass-api.de/api/xapi?way[bbox=",bb_SK,"][",object_x,"]",sep=""))
info2
schools_speyer = xmlRoot(info2)
schools_speyer
info3 <- xmlSApply(schools_speyer, xmlAttrs)
info3
head(info3)
length(info3)
library(geosmdata2)
paste(bMA["x","min"],bMA["y","min"],bMA["x","max"],bMA["y","max"],sep=",")
setwd(data.path2)
PLZ <- readOGR ("post_pl.shp","post_pl")
MA <- PLZ[PLZ@data$PLZORT99=="Mannheim",]
bMA <- bbox(MA)
object_x="amenity=school"
bbox_x <- paste(bMA["x","min"],bMA["y","min"],bMA["x","max"],bMA["y","max"],sep=",")
paste(bMA["x","min"],bMA["y","min"],bMA["x","max"],bMA["y","max"],sep=",")
object_x <- "amenity=school"
bbox_x <- "8.4178134,49.41014103,8.59395996,49.58984376"
schools_MA <- xmlParse(paste("http://www.overpass-api.de/api/xapi?way[bbox=",bbox_x,"][",object_x,"]",
sep=""))
setwd(data.path2)
PLZ <- readOGR ("post_pl.shp","post_pl")
library(XML)
library(rgdal)
setwd(data.path2)
PLZ <- readOGR ("post_pl.shp","post_pl")
data.path <- "D:/Daten/Daten/GeoDaten/XAPI"
data.path2 <- "D:/Daten/Daten/GeoDaten"
rcode.path <- "J:/Work/Statistik/Kolb/Paper/UseOSMdata/rcode"
graph.path <- "J:/Work/Statistik/Kolb/VortrÃ¤ge/20150617_Forschungsboerse/Folien/figure"
github.path <- "C:/Users/kolbjp/Documents/GitHub/GeoData"
setwd(data.path2)
PLZ <- readOGR ("post_pl.shp","post_pl")
MA <- PLZ[PLZ@data$PLZORT99=="Mannheim",]
bMA <- bbox(MA)
object_x="amenity=school"
bbox_x <- paste(bMA["x","min"],bMA["y","min"],bMA["x","max"],bMA["y","max"],sep=",")
schools_MA <- xmlParse(paste("http://www.overpass-api.de/api/xapi?way[bbox=",bbox_x,"][",object_x,"]",
sep=""))
OSM.Data=schools_MA
way_id  <- unlist( xpathApply( OSM.Data, paste( "//tag[@v = '", value, "']/parent::way/@ id", sep = "" ) ) )
value <- "school"
way_id  <- unlist( xpathApply( OSM.Data, paste( "//tag[@v = '", value, "']/parent::way/@ id", sep = "" ) ) )
Liste <- list()
for (i in 1:n_obj){
Liste_i <- unlist(xpathApply( OSM.Data, paste("//way[@id = ",way_id[i],"]//tag/attribute::*",sep="") ) )
p.node		<- paste( "//way[@id = '", way_id[i] ,"']/nd/@ref", sep = "" )
way_node_save	<- as.numeric( xpathApply( OSM.Data, p.node ) )
p.lat	<- paste("//node[@id = ", way_node_save  ,"]/@ lat", sep = "")
p.lon	<- paste("//node[@id = ", way_node_save  ,"]/@ lon", sep = "")
lat <- lon <- rep(NA,length(nodes ))
for( j in 1:length(nodes ) )
{
lat_j 	<- as.numeric( xpathApply( OSM.Data, p.lat[ j ] ) )
lat[ j ] <- ifelse(length(lat_j)>0,lat_j,NA)
lon_j 	<- as.numeric( xpathApply( OSM.Data, p.lon[ j ] ) )
lon[ j ] 	<-ifelse(length(lat_j)>0,lon_j,NA)
}
lon_i <- mean( lon ,na.rm=T)
lat_i <-  mean( lat,na.rm=T )
ind_k <- which(names(Liste_i)=="k")
ind_v <- which(names(Liste_i)=="v")
Liste[[i]] <- data.frame(k=Liste_i[ind_k],
v=Liste_i[ind_v],
id=rep(way_id[i],length(ind_k)),
lat=rep(lat_i,length(ind_k)),
lon=rep(lon_i,length(ind_k))
)
}
DF_schools <- do.call(rbind,Liste)
length(way_id)
Liste <- list()
for (i in 1:length(way_id)){
Liste_i <- unlist(xpathApply( OSM.Data, paste("//way[@id = ",way_id[i],"]//tag/attribute::*",sep="") ) )
p.node		<- paste( "//way[@id = '", way_id[i] ,"']/nd/@ref", sep = "" )
way_node_save	<- as.numeric( xpathApply( OSM.Data, p.node ) )
p.lat	<- paste("//node[@id = ", way_node_save  ,"]/@ lat", sep = "")
p.lon	<- paste("//node[@id = ", way_node_save  ,"]/@ lon", sep = "")
lat <- lon <- rep(NA,length(nodes ))
for( j in 1:length(nodes ) )
{
lat_j 	<- as.numeric( xpathApply( OSM.Data, p.lat[ j ] ) )
lat[ j ] <- ifelse(length(lat_j)>0,lat_j,NA)
lon_j 	<- as.numeric( xpathApply( OSM.Data, p.lon[ j ] ) )
lon[ j ] 	<-ifelse(length(lat_j)>0,lon_j,NA)
}
lon_i <- mean( lon ,na.rm=T)
lat_i <-  mean( lat,na.rm=T )
ind_k <- which(names(Liste_i)=="k")
ind_v <- which(names(Liste_i)=="v")
Liste[[i]] <- data.frame(k=Liste_i[ind_k],
v=Liste_i[ind_v],
id=rep(way_id[i],length(ind_k)),
lat=rep(lat_i,length(ind_k)),
lon=rep(lon_i,length(ind_k))
)
}
library(geosmdata2)
?xmlParse
object_x <- "amenity=school"
bbox_x <- "8.4178134,49.41014103,8.59395996,49.58984376"
schools_MA <- xmlParse(paste("http://www.overpass-api.de/api/xapi?way[bbox=",bbox_x,"][",object_x,"]",
sep=""))
info <- extract_info_op(OSM.Data="schools_MA",value="school")
OSM.Data="schools_MA"
value="school"
way_id  <- unlist( xpathApply( OSM.Data, paste( "//tag[@v = '", value, "']/parent::way/@ id", sep = "" ) ) )
OSM.Data
info <- extract_info_op(OSM.Data=schools_MA,value="school")
way_id  <- unlist( xpathApply( OSM.Data, paste( "//tag[@v = '", value, "']/parent::way/@ id", sep = "" ) ) )
OSM.Data=schools_MA
way_id  <- unlist( xpathApply( OSM.Data, paste( "//tag[@v = '", value, "']/parent::way/@ id", sep = "" ) ) )
n_obj <- length(xpathApply( OSM.Data, "//way" ))
Liste <- list()
for (i in 1:n_obj){
Liste_i <- unlist(xpathApply( OSM.Data, paste("//way[@id = ",way_id[i],"]//tag/attribute::*",sep="") ) )
p.node		<- paste( "//way[@id = '", way_id[i] ,"']/nd/@ref", sep = "" )
way_node_save	<- as.numeric( xpathApply( OSM.Data, p.node ) )
p.lat	<- paste("//node[@id = ", way_node_save  ,"]/@ lat", sep = "")
p.lon	<- paste("//node[@id = ", way_node_save  ,"]/@ lon", sep = "")
lat <- lon <- rep(NA,length(nodes ))
for( j in 1:length(nodes ) )
{
lat_j 	<- as.numeric( xpathApply( OSM.Data, p.lat[ j ] ) )
lat[ j ] <- ifelse(length(lat_j)>0,lat_j,NA)
lon_j 	<- as.numeric( xpathApply( OSM.Data, p.lon[ j ] ) )
lon[ j ] 	<-ifelse(length(lat_j)>0,lon_j,NA)
}
lon_i <- mean( lon ,na.rm=T)
lat_i <-  mean( lat,na.rm=T )
ind_k <- which(names(Liste_i)=="k")
ind_v <- which(names(Liste_i)=="v")
Liste[[i]] <- data.frame(k=Liste_i[ind_k],
v=Liste_i[ind_v],
id=rep(way_id[i],length(ind_k)),
lat=rep(lat_i,length(ind_k)),
lon=rep(lon_i,length(ind_k))
)
}
way_node_save
library(geosmdata2)
object_x <- "amenity=school"
bbox_x <- "8.4178134,49.41014103,8.59395996,49.58984376"
schools_MA <- xmlParse(paste("http://www.overpass-api.de/api/xapi?way[bbox=",bbox_x,"][",object_x,"]",
sep=""))
info <- extract_info_op(OSM.Data=schools_MA,value="school")
library(geosmdata2)
object_x <- "amenity=school"
bbox_x <- "8.4178134,49.41014103,8.59395996,49.58984376"
schools_MA <- xmlParse(paste("http://www.overpass-api.de/api/xapi?way[bbox=",bbox_x,"][",object_x,"]",
sep=""))
info <- extract_info_op(OSM.Data=schools_MA,value="school")
info
head(info)
?extract_info_op
library(geosmdata2)
object_x <- "amenity=kindergarten"
bbox_x <- "8.4178134,49.41014103,8.59395996,49.58984376"
x_MA <- xmlParse(paste("http://www.overpass-api.de/api/xapi?way[bbox=",bbox_x,"][",object_x,"]",
sep=""))
library(XML)
x_MA <- xmlParse(paste("http://www.overpass-api.de/api/xapi?way[bbox=",bbox_x,"][",object_x,"]",
sep=""))
overpass_x <- extract_info_op(OSM.Data=x_MA,value="school")
extract_info_op
OSM.Data=x_MA
value="school"
way_id  <- unlist( xpathApply( OSM.Data, paste( "//tag[@v = '", value, "']/parent::way/@ id", sep = "" ) ) )
n_obj <- length(xpathApply( OSM.Data, "//way" ))
Liste <- list()
i<-1
Liste_i <- unlist(xpathApply( OSM.Data, paste("//way[@id = ",way_id[i],"]//tag/attribute::*",sep="") ) )
way_id[i]
OSM.Data
value
overpass_x <- extract_info_op(OSM.Data=x_MA,value="kindergarten")
overpass_x
library(geosmdata2)
data("osm_df")
head(osm_df)
library(geosmdata2)
data(osm_df)
?osm_df
library(geosmdata2)
Tab <- readHTMLTable("http://wiki.openstreetmap.org/wiki/Map_Features")
library(geosmdata2)
?get_osm_nodes
library(geosmdata2)
library(geosmdata2)
devtools::document()
library(geosmdata2)
library(geosmdata2)
library(geosmdata2)
data(uaBerlin)
pol_Berlin <- plotbui(uaBerlin)
plotbui
ua <- uaBerlin
ua_ids <- find(ua, way(tags(k == "building")))
plotbui <- function(ua){
ua_ids <- osmar::find(ua, way(tags(k == "building")))
ua_ids2 <- osmar::find_down(ua, way(ua_ids))
bg <- subset(ua, ids = ua_ids2)
bg_erg <- as_sp(bg, "polygons")
return(bg_erg)
}
v
pol_Berlin <- plotbui(uaBerlin)
ua_ids <- osmar::find(ua, way(tags(k == "building")))
osmar::find
?osmar::find
ua_ids <- find(ua, way(tags(k == "building")))
?find
osmar::find(ua, way(tags(k == "building")))
ua_ids <- osmar::find(ua, osmar::way(tags(k == "building")))
?way
ua_ids <- osmar::find(ua, osmar::way(osmar::tags(k == "building")))
ua_ids
ua_ids2 <- osmar::find_down(ua, osmar::way(ua_ids))
bg <- subset(ua, ids = ua_ids2)
bg_erg <- as_sp(bg, "polygons")
return(bg_erg)
bg_erg <- sp::as_sp(bg, "polygons")
library(geosmdata2)
dat <- c(8.417813,8.59396,49.410141,49.58984)
bb_x1 <- array(dat,c(2,2))
MA_bakery <-  request_xapi(bb_x=bb_x1,object_x="shop=bakery")
request_xapi
library(geosmdata2)
data.path <- "C:/Users/kolbjp/Documents/GitHub/GeoData/geosmdata2/data"
setwd(data.path)
load("osm_df.RData")
head(osm_df)
osm_df <- osm_df[complete.cases(osm_df),]
osm_df$Element <- NA
osm_df$Element[osm_df$Key=="aerialway"] <- "Way"
osm_df$Element[osm_df$Value=="pylon"] <- "Node"
osm_df$Element[osm_df$Key=="aeroway"] <- "Way"
osm_df$Element[osm_df$Key=="amenity"] <- "Node"
ind <- which(osm_df$Value=="school"&osm_df$Key=="building")
osm_df <- osm_df[-ind,]
osm_df
Tab <- readHTMLTable("http://wiki.openstreetmap.org/wiki/Map_Features")
library(XML)
Tab <- readHTMLTable("http://wiki.openstreetmap.org/wiki/Map_Features")
osmKey <- lapply(Tab,function(x)x$` Key`)
osmValue <- lapply(Tab,function(x)x$` Value`)
osm_df <- data.frame(Key=as.character(unlist(osmKey)),
Value=as.character(unlist(osmValue)))
osm_df <- osm_df[complete.cases(osm_df),]
osm_df$Element <- NA
osm_df$Element[osm_df$Key=="aerialway"] <- "Way"
osm_df$Element[osm_df$Value=="pylon"] <- "Node"
osm_df$Element[osm_df$Key=="aeroway"] <- "Way"
osm_df$Element[osm_df$Key=="amenity"] <- "Node"
nrow(osm_df)
osm_df
osm_df[1,]
head(osm_df)
head(osm_df,n=100)
head(osm_df,n=120)
head(osm_df,n=130)
osm_object <- get_osm_nodes(osm_df$Value[i],place="Sandhofen")
libraray(geoosmdata2)
library(geoosmdata2)
library(geosmdata2)
osm_object <- get_osm_nodes(osm_df$Value[i],place="Sandhofen")
osm_object
readHTMLTable("http://wiki.openstreetmap.org/wiki/Tag:aerialway%3Dcable_car")
data.path2 <- "J:/Work/Statistik/Kolb/Paper/UseOSMdata/data"
setwd(data.path2)
osm_df <- read.xlsx("OSMmapfeatures.xlsx",1)
library(xlsx)
setwd(data.path2)
osm_df <- read.xlsx("OSMmapfeatures.xlsx",1)
head(osm_df)
osm_df2 <- osm_df2
osm_df2 <- osm_df
osm_df <- osm_df2[,1:3]
head(osm_df)
osm_df[is.na(osm_df$Key),]
osm_df[is.na(osm_df$Value),]
osm_df <- osm_df[complete.cases(osm_df),]
osm_df
setwd(data.path)
save(osm_df,file="osm_df.RData")
osm_df
head(osm_df)
agrep("node",osm_df$Value[i])
agrep("node",osm_df$Value)
agrep("ode",osm_df$Value)
ind <- agrep("ode",osm_df$Value)
object2<- "school"
ind <- which(object2==osm_df$Value)
ind2 <- agrep("ode",osm_df$Value[ind])
ind2
if(length(ind)>0){
osm_df$Value[ind]
str(osm_df)
osm_df$Key <- as.character(osm_df$Key)
osm_df$Element <- as.character(osm_df$Element)
osm_df$Value <- as.character(osm_df$Value)
str(osm_df)
setwd(data.path)
save(osm_df,file="osm_df.RData")
ind2 <- agrep("ode",osm_df$Value[ind])
ind2 <- agrep("ode",osm_df$Element[ind])
ind2
ind2 <- agrep("node",osm_df$Element[ind])
ind2
library(geosmdata2)
schools <- get_osm_nodes("school",place="Montpellier")
info <- extract_info_op(OSM.Data=schools,value="school")
schools
object2="school"
place="Montpellier"
ind <- which(object2==osm_df$Value)
length(ind)>0
ind2 <- agrep("node",osm_df$Element[ind])
ind2
osm_df[ind]
osm_df[ind,]
ind <- ind2[1]
ind
ind2
ind
ind <- which(object2==osm_df$Value)
ind
ind <- ind[ind2[1]]
ind
get_osm_ways <- function(object2,place){
ind <- which(object2==osm_df$Value)
if(length(ind)>0){
ind2 <- agrep("way",osm_df$Element[ind])
if(length(ind2)>0){
ind <- ind[ind2[1]]
type_obj <- "way"
object <- paste(osm_df$Key[ind],"=",object2,sep="")
Link1 <- "http://www.overpass-api.de/api/interpreter?data=area[name=\""
InfoList <- xmlParse(paste(Link1,place,"\"];",type_obj,"(area)[",object,"];out;",sep=""))
return(InfoList)
}else{stop("Try another function!")}
}else{stop("Map feature not found - have a look at http://wiki.openstreetmap.org/wiki/Map_Features")}
}
roads <- get_osm_ways("secondary",place="Sandhofen")
roads
object2="secondary"
place="Sandhofen"
ind <- which(object2==osm_df$Value)
ind2 <- agrep("node",osm_df$Element[ind])
ind2
ind2 <- agrep("way",osm_df$Element[ind])
ind2
get_osm_nodes <- function(object2,place){
ind <- which(object2==osm_df$Value)
if(length(ind)>0){
ind2 <- agrep("node",osm_df$Element[ind])
if(length(ind2)>0){
ind <- ind[ind2[1]]
type_obj <- "node"
object <- paste(osm_df$Key[ind],"=",object2,sep="")
Link1 <- "http://www.overpass-api.de/api/interpreter?data=area[name=\""
InfoList <- xmlParse(paste(Link1,place,"\"];",type_obj,"(area)[",object,"];out;",sep=""))
return(InfoList)
}else{
ind2 <- agrep("way",osm_df$Element[ind])
if(length(ind2)>0){stop("Try function get_osm_ways")
}else{"Try function get_osm_relation"}
}
}else{stop("Map feature not found - have a look at http://wiki.openstreetmap.org/wiki/Map_Features")}
}
get_osm_ways <- function(object2,place){
ind <- which(object2==osm_df$Value)
if(length(ind)>0){
ind2 <- agrep("way",osm_df$Element[ind])
if(length(ind2)>0){
ind <- ind[ind2[1]]
type_obj <- "way"
object <- paste(osm_df$Key[ind],"=",object2,sep="")
Link1 <- "http://www.overpass-api.de/api/interpreter?data=area[name=\""
InfoList <- xmlParse(paste(Link1,place,"\"];",type_obj,"(area)[",object,"];out;",sep=""))
return(InfoList)
}else{
ind2 <- agrep("node",osm_df$Element[ind])
if(length(ind2)>0){stop("Try function get_osm_nodes")
}else{"Try function get_osm_relation"}
}
}else{stop("Map feature not found - have a look at http://wiki.openstreetmap.org/wiki/Map_Features")}
}
library(devtools)
install_github("https://github.com/Japhilko/GeoData/tree/master/geosmdata2")
?install_github
install_github("Japhilko/geosmdata2")
devtools::install_github("klutometis/roxygen")
devtools::install_github("Japhilko/geosmdata2")
devtools::install_github("Japhilko/GeoData/geosmdata2")
library(geosmdata2)
