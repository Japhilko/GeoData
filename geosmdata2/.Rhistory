Examples <- F
Ex
Ex=F
library(geosmdata2)
osm_object <- get_osm_ways(object2="cycleway",place="Mannheim")
xml_obj <- xmlRoot(osm_object)
xml_obj
infoAttrs <- xmlSApply(xml_obj, xmlAttrs)
infoAttrs
infoAttrs2 <- xmlSApply(xml_obj, xmlGetAttr)
infoAttrs2 <- xmlSApply(xml_obj, xmlValue)
infoAttrs2
head(infoAttrs2)
head(infoAttrs2[[1]])
head(infoAttrs2[[2]])
head(infoAttrs2[[3]])
xmlSApply(xml_obj[[1]], xmlAttrs)
xmlSApply(xml_obj, xmlAttrs)
?xpathApply
src = xpathApply(xml_obj, "//a[@href]", xmlGetAttr, "href")
src
src = xpathApply(osm_object, "//a[@href]", xmlGetAttr, "href")
src
osm_object
src = xpathApply(osm_object, "//a[@way]", xmlGetAttr, "href")
xpathApply(osm_object, "//a[@way]", xmlGetAttr, "href")
xpathApply(osm_object, "//a[@way]", xmlGetAttr, "nd")
extract_info_op
OSM.Data = osm_object
kov <- ifelse(value%in%osm_df$Value,"v","k")
if(kov=="v"){
ind <- which(value==osm_df$Value)
value = "cycleway"
value = "cycleway"
kov <- ifelse(value%in%osm_df$Value,"v","k")
if(kov=="v"){
ind <- which(value==osm_df$Value)
}else{
ind <- which(value==osm_df$Key)
}
Element <- osm_df$Element2[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
node_id
paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="")
osm_object
node_id<- xpathApply(OSM.Data,"//tag[@v= 'cycleway']/parent::way/@ id" "//tag[@v= 'cycleway']/parent::way/@ id")
node_id<- xpathApply(OSM.Data,"//tag[@v= 'cycleway']/parent::way/@ id")
node_id<- xpathApply(OSM.Data,"//tag[@v= 'cycleway']/parent::way/")
node_id<- xpathApply(OSM.Data,"//tag[@v= 'cycleway']/parent::way/@")
node_id<- xpathApply(OSM.Data,"//tag[@v= 'cycleway']/parent::way/@ id")
node_id<- xpathApply(OSM.Data,"//tag[@v= 'cycleway']/parent::way/@ ref")
node_id
node_id<- xpathApply(OSM.Data,"//tag[@v= 'cycleway']/parent::way/@ nd")
node_id
node_id<- xpathApply(OSM.Data,"//tag[@v= 'cycleway']/")
node_id<- xpathApply(OSM.Data,"/")
node_id
node_id<- xpathApply(OSM.Data,"//")
node_id<- xpathApply(OSM.Data,"/.")
node_id
node_id<- xpathApply(OSM.Data,".//")
node_id<- xpathApply(OSM.Data,".//")
node_id<- xpathApply(OSM.Data,"//.")
node_id
str(node_id)
Classes(node_id)
node_id:Classes
OSM.Data
node_id<- xpathApply(OSM.Data,"//@id")
node_id
node_id<- xpathApply(OSM.Data,"//@way")
node_id
node_id<- xpathApply(OSM.Data,"//@nd")
node_id
OSM.Data
node_id<- xpathApply(OSM.Data,"/parent::way/@ id")
node_id
node_id<- xpathApply(OSM.Data,"parent::way/@ id")
node_id
node_id<- xpathApply(OSM.Data,"//parent::way/@ id")
node_id
node_id<- xpathApply(OSM.Data,"//self::way/@ id")
node_id
node_id<- xpathApply(OSM.Data,"//self::way/")
node_id<- xpathApply(OSM.Data,"//self::way/.")
node_id
node_id<- xpathApply(OSM.Data,"//child::way/.")
node_id
node_id<- xpathApply(OSM.Data,"//child::nd/.")
node_id
node_id<- xpathApply(OSM.Data,"//child::nd/./@ref")
node_id
unlist(node_id<- xpathApply(OSM.Data,"//child::nd/./@ref"))
node_way<- xpathApply(OSM.Data,"//child::way/.")
node_way
xpathApply(node_way[[1]],"//child::way/.")
node_way[[1]]
refs<- xpathApply(OSM.Data,"//child::nd/./@ref")
refs
xpathApply(node_way[[1]],"//child::way/.")
node_way <- xpathApply(node_way,"//child::way/.")
node_way<- xpathApply(OSM.Data,"//child::way/.")
xpathApply(node_way,"/")
xpathApply(node_way,"/.")
XMLNodeSet
xpathSApply(node_way,xmlValue)
xmlChildren(OSM.Data)
xml <- xmlChildren(OSM.Data)
xpathApply(xml,"//child::way/.")
value = "cycleway"
OSM.Data = osm_object
kov <- ifelse(value%in%osm_df$Value,"v","k")
if(kov=="v"){
ind <- which(value==osm_df$Value)
}else{
ind <- which(value==osm_df$Key)
}
Element <- osm_df$Element2[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
if (length(node_id)==0){
Element <- osm_df$Element3[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
if (length(node_id)==0){
Element <- osm_df$Element4[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
if (length(node_id)==0){
Element <- osm_df$Element5[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
}
}
}
pb <- txtProgressBar(min = 0, max = length(node_id), style = 3)
object2="cycleway"
object2="cycleway"
place="Trier"
ind <- which(object2==osm_df$Value)
if(length(ind)>0){
ind2 <- agrep("way",osm_df$Element[ind])
if(length(ind2)>0){
ind <- ind[ind2[1]]
type_obj <- "way"
object <- paste(osm_df$Key[ind],"=",object2,sep="")
Link1 <- "http://www.overpass-api.de/api/interpreter?data=area[name=\""
InfoList <- xmlParse(paste(Link1,place,"\"];",type_obj,"(area)[",object,"];out;",sep=""))
return(InfoList)
}else{
ind2 <- agrep("node",osm_df$Element[ind])
if(length(ind2)>0){stop("Try function get_osm_nodes")
}else{"Try function get_osm_relation"}
}
}else{stop("Map feature not found - have a look at http://wiki.openstreetmap.org/wiki/Map_Features")}
InfoList
paste(Link1,place,"\"];",type_obj,"(area)[",object,"];out;",sep="")
Trier <- xmlParse("http://www.overpass-api.de/api/interpreter?data=area[name=\"Trie\"];way(area)[highway=cycleway];out geom;")
Trier
Trier <- xmlParse("http://www.overpass-api.de/api/interpreter?data=area[name=\"Trier\"];way(area)[highway=cycleway];out geom;")
Trier
get_osm_ways <- function(object2,place){
ind <- which(object2==osm_df$Value)
if(length(ind)>0){
ind2 <- agrep("way",osm_df$Element[ind])
if(length(ind2)>0){
ind <- ind[ind2[1]]
type_obj <- "way"
object <- paste(osm_df$Key[ind],"=",object2,sep="")
Link1 <- "http://www.overpass-api.de/api/interpreter?data=area[name=\""
InfoList <- xmlParse(paste(Link1,place,"\"];",type_obj,"(area)[",object,"];out geom;",sep=""))
return(InfoList)
}else{
ind2 <- agrep("node",osm_df$Element[ind])
if(length(ind2)>0){stop("Try function get_osm_nodes")
}else{"Try function get_osm_relation"}
}
}else{stop("Map feature not found - have a look at http://wiki.openstreetmap.org/wiki/Map_Features")}
}
bike_HD <- get_osm_ways(object2="cycleway",place="Heidelberg")
bike_HD
osm_object <- bike_HD
value = "cycleway"
OSM.Data <- bike_HD
kov <- ifelse(value%in%osm_df$Value,"v","k")
if(kov=="v"){
ind <- which(value==osm_df$Value)
}else{
ind <- which(value==osm_df$Key)
}
Element <- osm_df$Element2[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
if (length(node_id)==0){
Element <- osm_df$Element3[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
if (length(node_id)==0){
Element <- osm_df$Element4[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
if (length(node_id)==0){
Element <- osm_df$Element5[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
}
}
}
pb <- txtProgressBar(min = 0, max = length(node_id), style = 3)
lat_x <- xpathApply(OSM.Data,paste("//tag[@",kov," = '",value,"']/parent::",Element,"/@ lat",sep=""))
lon_x <- xpathApply(OSM.Data,paste("//tag[@",kov," = '",value,"']/parent::",Element,"/@ lon",sep=""))
Liste <- list()
1:length(node_id)
Liste_i <- unlist(xpathApply(OSM.Data,paste("//",Element,"[@id = ",node_id[i],"]//tag/attribute::*",sep="")))
Liste_i
lat_x
OSM.Data
Liste_i <- unlist(xpathApply(OSM.Data,paste("//",Element,"[@id = ",node_id[i],"]//nd/attribute::*",sep="")))
Liste_i
bikeways <- get_osm_ways(object2="cycleway",place="San Francisco")
bikeways
Liste_i
ind_lat <- which(names(Liste_i)=="lat")
ind_ref <- which(names(Liste_i)=="lat")
ind_lat <- which(names(Liste_i)=="lat")
ind_lon <- which(names(Liste_i)=="lon")
Liste[[i]] <- data.frame(ref=Liste_i[ind_ref],
lat=Liste_i[ind_lat],
lon=Liste_i[ind_lon],
id=rep(unlist(node_id[i]),length(ind_ref))
)
Liste[[i]]
for (i in 1:length(node_id)){
Liste_i <- unlist(xpathApply(OSM.Data,paste("//",Element,"[@id = ",node_id[i],"]//nd/attribute::*",sep="")))
ind_ref <- which(names(Liste_i)=="lat")
ind_lat <- which(names(Liste_i)=="lat")
ind_lon <- which(names(Liste_i)=="lon")
Liste[[i]] <- data.frame(ref=Liste_i[ind_ref],
lat=Liste_i[ind_lat],
lon=Liste_i[ind_lon],
id=rep(unlist(node_id[i]),length(ind_ref))
)
# cat("Object", i, "from",length(node_id), "\n")
setTxtProgressBar(pb, i)
}
DF_x <- do.call(rbind,Liste)
DF_x
extract_position_op <- function(OSM.Data,value){
kov <- ifelse(value%in%osm_df$Value,"v","k")
if(kov=="v"){
ind <- which(value==osm_df$Value)
}else{
ind <- which(value==osm_df$Key)
}
Element <- osm_df$Element2[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
if (length(node_id)==0){
Element <- osm_df$Element3[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
if (length(node_id)==0){
Element <- osm_df$Element4[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
if (length(node_id)==0){
Element <- osm_df$Element5[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
}
}
}
pb <- txtProgressBar(min = 0, max = length(node_id), style = 3)
lat_x <- xpathApply(OSM.Data,paste("//tag[@",kov," = '",value,"']/parent::",Element,"/@ lat",sep=""))
lon_x <- xpathApply(OSM.Data,paste("//tag[@",kov," = '",value,"']/parent::",Element,"/@ lon",sep=""))
Liste <- list()
if (length(node_id)>5000){cat("It can take some time!","\n")}
for (i in 1:length(node_id)){
Liste_i <- unlist(xpathApply(OSM.Data,paste("//",Element,"[@id = ",node_id[i],"]//nd/attribute::*",sep="")))
ind_ref <- which(names(Liste_i)=="lat")
ind_lat <- which(names(Liste_i)=="lat")
ind_lon <- which(names(Liste_i)=="lon")
Liste[[i]] <- data.frame(ref=Liste_i[ind_ref],
lat=Liste_i[ind_lat],
lon=Liste_i[ind_lon],
id=rep(unlist(node_id[i]),length(ind_ref))
)
# cat("Object", i, "from",length(node_id), "\n")
setTxtProgressBar(pb, i)
}
DF_x <- do.call(rbind,Liste)
return(DF_x)
}
info <- extract_position_op(bike_HD,"cycleway")
info
library(geosmdata2)
roads <- get_osm_ways(object2="secondary",place="Sandhofen")
brewery <- get_osm_nodes("brewery",place="Ingolstadt")
schools <- get_osm_nodes(object2="school",place="Frankfurt")
schools
extract_info_op <- function(OSM.Data,value){
kov <- ifelse(value%in%osm_df$Value,"v","k")
if(kov=="v"){
ind <- which(value==osm_df$Value)
}else{
ind <- which(value==osm_df$Key)
}
Element <- osm_df$Element2[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
if (length(node_id)==0){
Element <- osm_df$Element3[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
if (length(node_id)==0){
Element <- osm_df$Element4[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
if (length(node_id)==0){
Element <- osm_df$Element5[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
}
}
}
if(length(node_id)>0){
pb <- txtProgressBar(min = 0, max = length(node_id), style = 3)
lat_x <- xpathApply(OSM.Data,paste("//tag[@",kov," = '",value,"']/parent::",Element,"/@ lat",sep=""))
lon_x <- xpathApply(OSM.Data,paste("//tag[@",kov," = '",value,"']/parent::",Element,"/@ lon",sep=""))
Liste <- list()
if (length(node_id)>5000){cat("It can take some time!","\n")}
for (i in 1:length(node_id)){
Liste_i <- unlist(xpathApply(OSM.Data,paste("//",Element,"[@id = ",node_id[i],"]//tag/attribute::*",sep="")))
ind_k <- which(names(Liste_i)=="k")
ind_v <- which(names(Liste_i)=="v")
Liste[[i]] <- data.frame(k=Liste_i[ind_k],
v=Liste_i[ind_v],
id=rep(unlist(node_id[i]),length(ind_k))
)
# cat("Object", i, "from",length(node_id), "\n")
setTxtProgressBar(pb, i)
}
DF_x <- do.call(rbind,Liste)
DF_x1 <- data.frame(with(DF_x,tapply(v,list(id,k),function(x)as.character(x))))
if(length(lat_x)>0){
DF_x1$lat <- unlist(as.numeric(lat_x))
DF_x1$lon <- unlist(as.numeric(lon_x))
}
return(DF_x1)
}else{cat("No objects found","\n")}
}
schools <- get_osm_nodes(object2="school",place="Frankfurt")
info <- extract_info_op(OSM.Data=schools,value="school")
library(geosmdata2)
gc <- geocode_osm("rue Saint Vincent Paris",output="all")
gc
link <- "https://en.wikipedia.org/wiki/List_of_airports_in_Germany"
library(geosmdata2)
airports <- readHTMLTable(link)
?readHTMLTable
u = "http://en.wikipedia.org/wiki/List_of_countries_by_population"
tables = readHTMLTable(u)
link <- htmlParse("https://en.wikipedia.org/wiki/List_of_airports_in_Germany")
link <- htmlParse("https://en.wikipedia.org/wiki/List_of_airports_in_Germany")
library(XML)
link <- htmlParse("https://en.wikipedia.org/wiki/List_of_airports_in_Germany")
link
library(RCurl)
fileURL <- "https://en.wikipedia.org/wiki/List_of_airports_in_Germany"
xData <- getURL(fileURL)
MA_cycle1 <- get_osm_ways(object2="cycleway",place="Mannheim")
library(geosmdata2)
MA_cycle1 <- get_osm_ways(object2="cycleway",place="Mannheim")
MA_bike_routes <- extract_position_op(MA_cycle1,"cycleway")
MA_bike_routes
library(ggmap)
MAmap <- get_googlemap("Mannheim")
cafes <- get_osm_nodes("cafe",place="Aalborg")
cafes_aa <- extract_info_op(OSM.Data=cafes,value="cafe")
cafes
extract_info_op <- function(OSM.Data,value){
kov <- ifelse(value%in%osm_df$Value,"v","k")
if(kov=="v"){
ind <- which(value==osm_df$Value)
}else{
ind <- which(value==osm_df$Key)
}
Element <- osm_df$Element2[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
if (length(node_id)==0){
Element <- osm_df$Element3[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
if (length(node_id)==0){
Element <- osm_df$Element4[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
if (length(node_id)==0){
Element <- osm_df$Element5[ind]
node_id<- xpathApply(OSM.Data,paste("//tag[@",kov,"= '",value,"']/parent::",Element,"/@ id",sep="") )
}
}
}
if(length(node_id)>0){
pb <- txtProgressBar(min = 0, max = length(node_id), style = 3)
lat_x <- xpathApply(OSM.Data,paste("//tag[@",kov," = '",value,"']/parent::",Element,"/@ lat",sep=""))
lon_x <- xpathApply(OSM.Data,paste("//tag[@",kov," = '",value,"']/parent::",Element,"/@ lon",sep=""))
Liste <- list()
if (length(node_id)>5000){cat("It can take some time!","\n")}
for (i in 1:length(node_id)){
Liste_i <- unlist(xpathApply(OSM.Data,paste("//",Element,"[@id = ",node_id[i],"]//tag/attribute::*",sep="")))
ind_k <- which(names(Liste_i)=="k")
ind_v <- which(names(Liste_i)=="v")
Liste[[i]] <- data.frame(k=Liste_i[ind_k],
v=Liste_i[ind_v],
id=rep(unlist(node_id[i]),length(ind_k))
)
# cat("Object", i, "from",length(node_id), "\n")
setTxtProgressBar(pb, i)
}
DF_x <- do.call(rbind,Liste)
DF_x1 <- data.frame(with(DF_x,tapply(v,list(id,k),function(x)as.character(x))))
if(length(lat_x)>0){
DF_x1$lat <- unlist(as.numeric(lat_x))
DF_x1$lon <- unlist(as.numeric(lon_x))
}
return(DF_x1)
}else{cat("No objects found","\n")}
}
cafes_aa <- extract_info_op(OSM.Data=cafes,value="cafe")
cafes <- get_osm_nodes("cafe",place="Concord")
cafes_cc <- extract_info_op(OSM.Data=cafes,value="cafe")
Concord_map <- get_googlemap("Concord")
Concord_map + geom_point(aes(x = lon, y = lat),
data = cafes_cc)
cafes_cc
Concord_map
ggmap(Concord_map)
ggmap(Concord_map)+ geom_point(aes(x = lon, y = lat),
data = cafes_cc)
data(wrld_simpl)
library(maptools)
data(wrld_simpl)
library(knitr)
data(wrld_simpl)
wrld_simpl@data
kable(head(wrld_simpl))
head(wrld_simpl)
kable(head(wrld_simpl@data))
map()
map("france")
kable(head(world.cities))
head(world.cities)
data(world.cities)
kable(head(world.cities))
rm(list=ls())
author <- "Siegfried Gabler, Jan-Philipp Kolb"
scriptname <- "WeightALL_D_SurveyPackage.R"
library(survey)
library(foreign)
#---------------------------------------#
# Paths
#---------------------------------------#
path <- "J:/Work/Statistik/Kolb/Paper/Gewichtung/data"
r.path <- "J:/Work/Statistik/Kolb/Paper/Gewichtung/Rcode/rcodePaper"
#---------------------------------------#
# Read data
#---------------------------------------#
setwd(path)
load("ALLBUSweights.RData")
x_ALL <- x
load("ALLBUS10Vars.RData")
#---------------------------------------#
# Read functions
#---------------------------------------#
setwd(r.path)
source("WeightALL_B_functions.R")
#---------------------------------------#
# Choose variables for analysis
#---------------------------------------#
Descr <- Vars[-c(1:3),3]
Variablen <- as.character(Vars[-c(1:3),1])
nVars <- c("p_inklusion","gewfake","pointint","bikregbez","bikbula","regbez","v942","v762","v977","deutsch","v976")
Nind <- match(nVars,Variablen)
Variablen <- Variablen[-Nind]
j<- 1
nr       <- match(Variablen[j],colnames(x))
x <- x_ALL
x        <- subset(x,is.na(x[,nr])==0)  # Zeilen mit missings in Variable werden gelöscht
#---------------------------------------#
# Compute mean etc for western Germany
#---------------------------------------#
# West
N_West    <- 8497      # Zahl der Gemeinden (PSUs); aus GEM2007.sav + Berlin-West
K_West    <- 55701259  # Zahl der 18+ Einwohner (SSUs); aus 6706109495_Allokationsprotokoll.txt
# Mh_West   <- 111       # Zahl der Sample Points; aus 6706109495_Allokationsprotokoll.txt
x_West    <- subset(x,x$v5==1)
tab_lev <- table(x_West[,nr])
erg_West <- data.frame(Variable=Variablen[j],
Level=names(tab_lev),
Estimator.mean=NA,
Variance.estimator=NA,
Estimator.for.sigma.2=NA,
Sampling.variance=NA,
mean_survey=NA,
variance_survey=NA,
DEff_survey=NA
)
i <-1
x_West$ID <- 1:nrow(x_West)
tab_v762 <- table(x_West$v762)
x_West$prob1 <- (x_West$Mi/K_West)*length(tab_v762)
ind <- match(x_West$v762,names(tab_v762))
x_West$prob2 <- tab_v762[ind]/x_West$Mi
x_West$weight <- 1/(x_West$prob1*x_West$prob2)
ys_West   <- as.numeric(x_West[,nr]==names(tab_lev)[i])
eval(parse(text=paste("x_West$ys_",names(tab_lev)[i],"<- ys_West",sep="")))
n_West   <- nrow(x_West)
dclus_ALLB <-svydesign(id=~v762+ID,prob=~prob1+prob2,data=x_West)
erg_West[i,3:6] <-  sig_hat(ys=ys_West,
Mi=x_West$Mi,
PSU=x_West$PSU,
sPSU=x_West$v762,
N=N_West,
K=K_West)
erg_survey <- svymean(~ys_West, dclus_ALLB, deff=TRUE)
erg_West[i,"mean_survey"] <- erg_survey
erg_West[i,"variance_survey"] <- SE(erg_survey)^2
erg_West[i,"DEff_survey"] <- deff(erg_survey)
gc()
