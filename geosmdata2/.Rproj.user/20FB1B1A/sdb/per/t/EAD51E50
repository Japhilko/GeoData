{
    "contents" : "---\ntitle: \"maps package\"\nauthor: \"Jan-Philipp Kolb\"\ndate: \"17. Juli 2015\"\noutput: ioslides_presentation\n---\n\n```{r,echo=F}\nlibrary(knitr)\n```\n\n\n\n## The maps package\n\n```{r,message=F}\nlibrary(maps)\n?map\n```\n\n## A first map\n\n```{r}\nmap()\n```\n\n\n## A first argument\n\nThe same command with an argument:\n\n```{r}\nmap(\"usa\")\n```\n\n## A map of france\n\n```{r}\nmap(\"france\")\n```\n\n## Choropleths - package maps\nGet the borders in blue color:\n```{r}\nlibrary ( maps )\nmap (\"italy\", col = \"blue\")\n```\n\n## Choropleths - package maps\n\nIf we want the areas in blue:\n```{r}\nmap (\"italy\",fill =T, col = \"blue\")\n```\n\n## More colors\n\nCreate a vector:\n\n```{r}\ncolors <- c(\"blue\",\"red\",\"yellow\")\n```\n\nand use the vector to specify the color\n\n```{r}\nmap (\"italy\",fill =T, col = colors)\n```\n\n## Excursus: more colors!\nYou can also use the [rgb](https://stat.ethz.ch/R-manual/R-devel/library/grDevices/html/rgb.html) command to create your own colors:\n\n```{r}\nmap(\"italy\",fill=T, col = rgb(0,1,0))\n```\n\n## Try also\n\n```{r,eval=F}\nmap(\"italy\",fill=T, col = rgb(1,0,0))\nmap(\"italy\",fill=T, col = rgb(1,1,1))\nmap(\"italy\",fill=T, col = rgb(1,0.5,0.4))\n```\n\n## Choropleths - package maps\nIf you want to know, which region is at which place:\n\n```{r}\nitaly <- map(\"italy\", plot = F)\nhead(italy$names)\n```\n\n## A map for Germany\n\n```{r}\nlibrary(maps)\nmap(\"world\", \"Germany\")\n```\n\n## Choropleths - package maps - two countries\n\n\n```{r}\nmap(\"world\", c(\"Germany\",\"Poland\"))\n```\n\n\n## 2 countries with color\n\n```{r}\nmap(\"world\", c(\"Germany\",\"Austria\"),fill=T,\ncol=c(\"red\",\"green\"))\n```\n\n\n## Choropleths - package maps - additional features\n\n```{r}\nmap(\"world\", \"China\")\nmap.scale()\n```\n\n## Choropleths - package maps - additional features\n\nLike `map`, but labels the regions:\n\n```{r}\nmap.text(\"county\", \"penn\")\n```\n\nPennsylvania counties\n\n## R-package maps - World cities\n\n`data` loads specified data sets, or lists the available data sets.\n\n```{r}\ndata(world.cities)\n```\n\n`head` - Return the First Part of an Object\n\n```{r,eval=F}\nhead(world.cities)\n```\n\n## Overview of world cities data\n\n```{r,echo=F}\nkable(head(world.cities))\n```\n\n## Map the cities of the world\n\n\n```{r}\nmap()\nmap.cities(world.cities)\n```\n\n## Cities of France\n\n```{r}\ndata(world.cities)\nmap(\"france\")\nmap.cities(world.cities)\n```\n\n## Only cities of France\n\n```{r}\nFrenchCity <- world.cities$country.etc==\"France\"\nFCit <- world.cities[FrenchCity,]\n```\n\n```{r,echo=F}\nkable(head(FCit,n=4))\n```\n\n\n## Only cities of France\n\nNow it is possible to map only the french cities:\n\n```{r}\nmap(\"france\")\nmap.cities(FCit,col=\"blue\",pch=20)\n```\n\n`pch` - plotting character, i.e., symbol to use.\n\n\n## Different sizes - different colors \n\n```{r}\nFCit_Bc<-FCit[FCit$pop>50000,]\nmap(\"france\")\nmap.cities(FCit,col=\"blue\",pch=20)\nmap.cities(FCit_Bc,col=\"red\",pch=20)\n```\n\n## Data basis - CIA World DataBank II\n\nThe [CIA World DataBank](http://www.evl.uic.edu/pape/data/WDB/) is a collection of world map data, consisting of vector descriptions of land outlines, rivers, / political boundaries. It was created by U.S. government in the 1980s.\n",
    "created" : 1437138630788.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "893431364",
    "id" : "EAD51E50",
    "lastKnownWriteTime" : 1437140203,
    "path" : "~/GitHub/GeoData/workshops/B0_maps.Rmd",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 11,
    "source_on_save" : false,
    "type" : "r_markdown"
}