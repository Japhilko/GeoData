{
    "contents" : "###################################################\n# Use the osm api xapi with R\n# Jan-Philipp Kolb\n# Wed Jun 17 12:11:25 2015\n#\n###################################################\n\n\n#------------------------------------------#\n# In general\n#------------------------------------------#\n\nauthor <- \"Jan-Philipp Kolb\"\nscriptname <- \"rOSM_G_OSMoverpass.R\"\n\n#------------------------------------------#\n# Libraries\n#------------------------------------------#\n\nlibrary(XML)\nlibrary(rgdal)\nlibrary(raster)\n\n#------------------------------------------#\n# paths\n#------------------------------------------#\n\ndata.path <- \"D:/Daten/Daten/GeoDaten/XAPI\"\ndata.path2 <- \"D:/Daten/Daten/GeoDaten\"\nrcode.path <- \"J:/Work/Statistik/Kolb/Paper/UseOSMdata/rcode\"\ngraph.path <- \"J:/Work/Statistik/Kolb/Vorträge/20150617_Forschungsboerse/Folien/figure\"\ngithub.path <- \"C:/Users/kolbjp/Documents/GitHub/GeoData\"\n\n\n#------------------------------------------#\n# Use zip codes to define bounding box\n#------------------------------------------#\n\n\nsetwd(data.path2)\nPLZ <- readOGR (\"post_pl.shp\",\"post_pl\")\nMA <- PLZ[PLZ@data$PLZORT99==\"Mannheim\",]\nbMA <- bbox(MA)\n\nbbox_x <- paste(bMA[\"x\",\"min\"],bMA[\"y\",\"min\"],bMA[\"x\",\"max\"],bMA[\"y\",\"max\"],sep=\",\")\n\n\n#------------------------------------------#\n# geocode addresses\n#------------------------------------------#\n\nobject_x=\"highway=living_street\"\nstreets_MA <- xmlParse(paste(\"http://www.overpass-api.de/api/xapi?way[bbox=\",bbox_x,\"][\",object_x,\"]\",\n                             sep=\"\"))\n\n\n# three houses in Ludwigshafen\nbbox_x <- \"8.45519,49.46872,8.45575,49.46903\"\nobject_x=\"addr:housenumber=*\"\nstreets_LU <- xmlParse(paste(\"http://www.overpass-api.de/api/xapi?way[bbox=\",bbox_x,\"][\",object_x,\"]\",\n                             sep=\"\"))\n\n\n\n\n#------------------------------------------#\n# download information\n#------------------------------------------#\n\n\nobject_x=\"shop=bakery\"\nbakery_MA <- xmlParse(paste(\"http://www.overpass-api.de/api/xapi?node[bbox=\",bbox_x,\"][\",object_x,\"]\",\n                            sep=\"\"))\nvalue <- \"bakery\"\nway_id  <- unlist( xpathApply( bakery_MA,\"//tag[@v = 'bakery']/parent::node/@ id\") )\n\n\nxpathApply(bakery_MA,\"//tag[@v = 'bakery']\")\n\nxpathApply(bakery_MA,\"//tag[@v = 'bakery']/parent::node/@ lat\")\nxpathApply(bakery_MA,\"//tag[@v = 'bakery']/parent::node/@ lon\")\n\nfor (i in 1:length(way_id)){\n  Liste <- unlist(xpathApply(bakery_MA,paste(\"//node[@id = \",way_id[i],\"]//tag/attribute::*\",sep=\"\") )   )\n}\n\n\nOSM.Data <- bakery_MA\n\nbakeries <- extract_info_op(OSM.Data=bakery_MA,value=\"bakery\")\n\n\nDEU1 <- getData('GADM', country='DEU', level=1)\n\nSAL <- DEU1[DEU1@data$NAME_1==\"Saarland\",]\n\n\n\nb_box_SAL <- bbox(SAL)\nbbox_x <- paste(b_box_SAL[\"x\",\"min\"],b_box_SAL[\"y\",\"min\"],b_box_SAL[\"x\",\"max\"],b_box_SAL[\"y\",\"max\"],sep=\",\")\n\nobject_x=\"shop=bakery\"\nbakery_SAL <- xmlParse(paste(\"http://www.overpass-api.de/api/xapi?node[bbox=\",bbox_x,\"][\",object_x,\"]\",\n                            sep=\"\"))\n\nbakeries <- extract_info_op(OSM.Data=bakery_SAL ,value=\"bakery\")\n\nplot(SAL)\npoints(bakeries$lon,bakeries$lat,pch=20)\n\nsetwd(data.path)\nattr(bakery_SAL,\"Info\") <- paste(author,scriptname,date())\nsave(bakery_SAL,file=\"bakery_SAL.RData\")\n\n#------------------------------------------#\n# Make a map - bakeries SAL\n#------------------------------------------#\n\n\n\nsetwd(data.path2)\nSB <- PLZ[PLZ@data$PLZORT99==\"Saarbrücken\",]\nbMA <- bbox(SB)\n\nbbox_x <- paste(bMA[\"x\",\"min\"],bMA[\"y\",\"min\"],bMA[\"x\",\"max\"],bMA[\"y\",\"max\"],sep=\",\")\n\nbakery_SB <- xmlParse(paste(\"http://www.overpass-api.de/api/xapi?node[bbox=\",bbox_x,\"][\",object_x,\"]\",\n                             sep=\"\"))\n\nbakeries_SB <- extract_info_op(OSM.Data=bakery_SB ,value=\"bakery\")\n\nplot(SB)\npoints(bakeries_SB$lon,bakeries_SB$lat,pch=20)\n\nSBmap <- qmap(\"Saarbruecken\",zoom=13)\n\nSBmap +\n  geom_point(aes(x = lon, y = lat),\n             data = bakeries_SB)\n\n#------------------------------------------#\n# Make a map\n#------------------------------------------#\n\n\nMAmap <- qmap(\"Mannheim\",zoom=13)\n\nsetwd(graph.path)\npng(\"MAmap_bakeries.png\")\nMAmap +\n  geom_point(aes(x = lon, y = lat),\n             data = bakeries)\ndev.off()\n\n\n\n#------------------------------------------#\n# download information - RLP\n#------------------------------------------#\nDEU1 <- getData('GADM', country='DEU', level=1)\nRLP <- DEU1[DEU1@data$NAME_1==\"Rheinland-Pfalz\",]\n\nb_box <- bbox(RLP)\nbbox_x <- paste(b_box[\"x\",\"min\"],b_box[\"y\",\"min\"],b_box[\"x\",\"max\"],b_box[\"y\",\"max\"],sep=\",\")\n\nbakery_RLP <- xmlParse(paste(\"http://www.overpass-api.de/api/xapi?node[bbox=\",bbox_x,\"][\",object_x,\"]\",\n                             sep=\"\"))\n\nbakeries_RLP <- extract_info_op(OSM.Data=bakery_RLP ,value=\"bakery\")\n\n#------------------------------------------#\n# Links\n#------------------------------------------#\n\n\n# http://stackoverflow.com/questions/19821707/how-to-get-city-districts-to-places-via-overpass-api\n\n\n# http://www.d-mueller.de/blog/open-streetmap-api-tutorial-umkreissuche/\n\n# http://blog-en.openalfa.com/how-to-query-openstreetmap-using-the-overpass-api\n\n# http://wiki.openstreetmap.org/wiki/Overpass_turbo/Wizard#You_can_use_wildcards\n\n# http://overpass-api.de/query_form.html\n\n# http://wiki.openstreetmap.org/wiki/Overpass_API/Language_Guide\n",
    "created" : 1435765011641.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2777023601",
    "id" : "6B8BB161",
    "lastKnownWriteTime" : 1435765364,
    "path" : "J:/Work/Statistik/Kolb/Paper/UseOSMdata/rcode/rOSM_G_OSMoverpass.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 16,
    "source_on_save" : false,
    "type" : "r_source"
}