{
    "contents" : "\n#-----------------------------------------#\n# Libraries\n#-----------------------------------------#\n\nlibrary(XML)\nlibrary(xlsx)\nlibrary(geosmdata2)\n\n#-----------------------------------------#\n# paths\n#-----------------------------------------#\n\nmain.path <- \"J:/Work/Statistik/Kolb/Paper/UseOSMdata/\"\ndata.path <- paste(main.path,\"data/\",sep=\"\")\nXML.path <- paste(data.path,\"XML/\",sep=\"\")\nr.path <- paste(main.path,\"rcode\",sep=\"\")\n\n#-----------------------------------------#\n# read data\n#-----------------------------------------#\n\n\n# https://de.wikipedia.org/wiki/Liste_der_Stadtbezirke_und_Stadtteile_von_Mannheim\nsetwd(data.path)\nSTeile <- read.xlsx(\"StadtteileMannheim.xlsx\",1)\n\n#-----------------------------------------#\n# prepare data\n#-----------------------------------------#\n\n\nStadtbezirke <- as.character(STeile$Stadtbezirke[!is.na(STeile$Stadtbezirke)])\nStadtbezirke2 <- gsub(\"/\",\"-\",Stadtbezirke)\nStadtbezirke2 <- repluml(Stadtbezirke2)\n\n\n#-----------------------------------------#\n# import data from osm\n#-----------------------------------------#\n\n # amenity=postbox does not work properly\n# landuse=residential - not very informative\n\n\nfor (i in 1:length(Stadtbezirke)){\n  object2=\"cafe\"\n  InfoList <- get_osm_nodes(object2,place=Stadtbezirke[i])\n  setwd(XML.path)\n  saveXML(InfoList,paste(Stadtbezirke2[i],\"_\",object2,\".xml\",sep=\"\"))\n  cat(Stadtbezirke[i],\"\\n\")\n}\n\n#-----------------------------------------#\n# Count objects\n#-----------------------------------------#\n\n\n\nCountObjects <- function(object2){\n  num_objects <- vector()\n  for (i in 1:length(Stadtbezirke)){\n    setwd(XML.path)\n    Info <- xmlParse(paste(Stadtbezirke2[i],\"_\",object2,\".xml\",sep=\"\"))\n    root <- xmlRoot(Info)\n    infoAttrs <- xmlSApply(root, xmlAttrs)\n    num_objects[i] <- sum(names(infoAttrs)==\"node\")\n  }\n  return(num_objects)\n}\n\nnum_objects1 <- CountObjects(object2=\"bakery\")\nnum_objects2 <- CountObjects(object2=\"bench\")\nnum_objects3 <- CountObjects(object2=\"pharmacy\")\nnum_objects4 <- CountObjects(object2=\"street_lamp\")\nnum_objects5 <- CountObjects(object2=\"fire_hydrant\")\nnum_objects6 <- CountObjects(object2=\"cafe\")\n\n\n\n#-----------------------------------------#\n# Correlation Analysis\n#-----------------------------------------#\n\nind <- match(Stadtbezirke,STeile$Stadtbezirke)\n\nSTeileInfo <- data.frame(Bench=num_objects2,\n                         bakery=num_objects1,\n                         pharmacy=num_objects3,\n                         street_lamp=num_objects4,\n                         fire_hydrant=num_objects5,\n                         cafe=num_objects6,\n                         Einw=STeile$Wohnberechtigte[ind],\n                         Stadtbezirke)\n\ncor(STeileInfo)\n\nmod1 <- lm(Einw~Bench+bakery+pharmacy+street_lamp,data=STeileInfo)\n\nsummary(mod1)\n\n#-----------------------------------------#\n# Links\n#-----------------------------------------#\n\n\n# http://tabula.technology/\n# https://github.com/tabulapdf/tabula-extractor\n\n# https://www.destatis.de/DE/ZahlenFakten/LaenderRegionen/Regionales/Gemeindeverzeichnis/Administrativ/Archiv/GVAuszugQ/BTW20132Q2013.html;jsessionid=402ED35CDE3AA80EA845809E64ACB10C.cae3\n\n\n# https://de.wikipedia.org/wiki/Liste_der_Stadtbezirke_und_Stadtteile_von_Mannheim\n\n# http://www.stat.berkeley.edu/~statcur/Workshop2/Presentations/XML.pdf\n\n\n\n\n#-----------------------------------------#\n# misc\n#-----------------------------------------#\n\n# import data from osm\n\n# amenity=postbox does not work properly\n# landuse=residential - not very informative\n\nobject <- \"amenity=bar\"\nobject2 <- \"fire_hydrant\"\nLink1 <- \"http://www.overpass-api.de/api/interpreter?data=area[name=\\\"\"\n\nfor (i in 1:length(Stadtbezirke)){\n  InfoList <- xmlParse(paste(Link1,Stadtbezirke[i],\"\\\"];node(area)[\",object,\"];out;\",sep=\"\"))  \n  setwd(XML.path)\n  saveXML(InfoList,paste(Stadtbezirke2[i],\"_\",object2,\".xml\",sep=\"\"))\n  cat(Stadtbezirke[i],\"\\n\")\n}\n\n\n# \"abutters\"\n\nobject <- \"abutters=residential\"\nobject2 <- \"residential\"\n\n\nLink1 <- \"http://www.overpass-api.de/api/interpreter?data=area[name=\\\"\"\n\nfor (i in 1:length(Stadtbezirke)){\n  InfoList <- xmlParse(paste(Link1,Stadtbezirke[i],\"\\\"];way(area)[\",object,\"];out geom;\",sep=\"\"))  \n  setwd(XML.path)\n  saveXML(InfoList,paste(Stadtbezirke2[i],\"_\",object2,\".xml\",sep=\"\"))\n  cat(Stadtbezirke[i],\"\\n\")\n}\n\n\n\nobject <- \"shop=bakery\"\nobject2 <- \"bakery\"\nLink1 <- \"http://www.overpass-api.de/api/interpreter?data=area[name=\\\"\"\n\nfor (i in 1:length(Stadtbezirke)){\n  InfoList <- xmlParse(paste(Link1,Stadtbezirke[i],\"\\\"];node(area)[\",object,\"];out;\",sep=\"\"))  \n  setwd(XML.path)\n  saveXML(InfoList,paste(Stadtbezirke2[i],\"_\",object2,\".xml\",sep=\"\"))\n  cat(Stadtbezirke[i],\"\\n\")\n}\n\n\n# Count number of objects\n\nnum_objects <- vector()\n\nfor (i in 1:length(Stadtbezirke)){\n  setwd(XML.path)\n  Info <- xmlParse(paste(Stadtbezirke2[i],\"_\",object2,\".xml\",sep=\"\"))\n  root <- xmlRoot(Info)\n  infoAttrs <- xmlSApply(root, xmlAttrs)\n  num_objects[i] <- sum(names(infoAttrs)==\"node\")\n  cat(Stadtbezirke[i],\"\\n\")\n}\n",
    "created" : 1435306179934.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2156295912",
    "id" : "99822FFB",
    "lastKnownWriteTime" : 1435145099,
    "path" : "J:/Work/Statistik/Kolb/Paper/UseOSMdata/rcode/rOSM_J_OSMregressionResNum.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 14,
    "source_on_save" : false,
    "type" : "r_source"
}